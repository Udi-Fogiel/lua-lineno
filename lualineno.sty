\ProvidesPackage
  {lualineno} [2024-07-16 v0.0.1
  Line numbering in LuaTeX]

\directlua{require('lualineno')}

\AddToHook{package/multicol/after}{%
  \def\lualineno@multicol{%
    \directlua{
        local right_box = token.create('mult@rightbox').index
        local col_attr = luatexbase.attributes['lualineno_col']
        local i = right_box
        local last = tex.count['doublecol@number'] - 2
        local column = 0
        while i < last do
            i = i + 2
            column = column + 1
            tex.box[i][col_attr] = column
        end
        tex.box[right_box][col_attr] = column + 1}}
  \directlua{token.set_macro("page@sofar", 
      token.get_macro("page@sofar"):gsub("\csstring\\\csstring\\mc@align@columns", 
      "\csstring\\\csstring\\lualineno@setcol@attr \csstring\\\csstring\\mc@align@columns"))}}
  
\AddToHook{package/balance/after}{%
  \def\lualineno@balance{%
    \directlua{
        local sec_col = token.create('@outputbox').index
        local first_col = token.create('@leftcolumn').index
        local col_attr = luatexbase.attributes['lualineno_col']
        tex.box[sec_col][col_attr] = 2
        tex.box[first_col][col_attr] = 1}}
    \expandafter\renewcommand\expandafter
    \@BAlancecol\expandafter{\@BAlancecol\lualineno@balance}}
        
\AddToHook{package/flushend/after}{%
  \def\lualineno@flushend{
    \directlua{
        local sec_col = token.create('@outputbox').index
        local first_col = token.create('@leftcolumn').index
        local col_attr = luatexbase.attributes['lualineno_col']
        tex.box[sec_col][col_attr] = 2
        tex.box[first_col][col_attr] = 1}}
    \directlua{token.set_macro("last@outputdblcol", 
        token.get_macro("last@outputdblcol"):gsub("\csstring\\\csstring\\set@outputbox@with@footnote@and@float \csstring\\\csstring\\fi", 
        "\csstring\\\csstring\\set@outputbox@with@footnote@and@float \csstring\\\csstring\\fi \csstring\\\csstring\\lualineno@balance"))}}
